[tool.poetry]
name = "sample-backend-app"
version = "0.1.0"
description = "A sample backend app used to illustrate testing and development techniques"
authors = ["Michal Bultrowicz <michal.bultrowicz@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "sample_backend"}]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.95.0"
uvicorn = "^0.21.1"
sqlalchemy = "^2.0.7"
psycopg = {extras = ["binary"], version = "^3.1.8"}
tenacity = "^8.2.2"


[tool.poetry.group.dev.dependencies]
pytest = "^7.2.2"
pdbpp = "^0.10.3"
coverage = "^7.2.2"
pylint = "^2.17.1"
isort = "^5.12.0"
mypy = "^1.1.1"
black = "^23.1.0"
ptpython = "^3.0.23"
alembic = "^1.10.2"
pytest-asyncio = "^0.21.0"
pgcli = "^3.5.0"
pylint-pytest = "^1.1.2"
httpx = "^0.23.3"
tenacity = "^8.2.2"

[tool.isort]
# https://pycqa.github.io/isort/docs/configuration/options.html#force-sort-within-sections
force_sort_within_sections = true
line_length = 120
profile = "black"

[tool.black]
line_length = 120

[tool.pylint.master]
load-plugins = "pylint_pytest"

[tool.pylint.format]
max-line-length = 120

[tool.pylint.report]
# to prevent the useless message about the code being rated at 10 when there aren't any pylint issues.
score = false

[tool.pylint.messages_control]
disable = [
    "missing-docstring",
    "fixme",
    "too-few-public-methods",
    "too-many-ancestors",
    # this complains if "open" is called without an explicit encoding
    "unspecified-encoding",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
